{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Linechart.svelte",
    "../Linechart2.svelte",
    "../Scatterplot.svelte",
    "../Scatterplot2.svelte",
    "../Scatterplot3.svelte"
  ],
  "sourcesContent": [
    "<!-- https://svelte.dev/repl/42ed4a09041e4e39b2f43f798eb898cb?version=3.21.0 -->\n<!-- https://svelte.dev/repl/9a24a35072c64af5b7bfde6c806c43d3?version=3.12.1 -->\n\n<script>\n\timport { slide } from 'svelte/transition';\n\timport Linechart from \"./Linechart.svelte\";\n\timport Linechart2 from \"./Linechart2.svelte\";\n\timport Scatterplot from \"./Scatterplot.svelte\";\n\timport Scatterplot2 from \"./Scatterplot2.svelte\";\n\timport { beforeUpdate, afterUpdate, onMount } from 'svelte';\n\n\tbeforeUpdate(() => {\n\t});\n\n\tafterUpdate(() => {\n\t});\n\n\tlet globalAlpha = 0.1;\n\tlet hubNum = 100;\n\tlet topN = 30;\n\tlet group = \"PCA\";\n\tlet globalClicked = false;\n\n\tlet localAlpha = 0.1;\n\tlet negRate = 5.0;\n\tlet numIter = 50;\n\tlet repulsionHub = 0.01\n\tlet localClicked = false;\n\n\tlet showItems = false;\n\tlet items = [];\n\tlet i = items.length;\n\n\tlet settingAssure = false;\n\n\tfunction handleClickGlobal() {\n\t\tglobalClicked = !globalClicked;\n\t}\n\n\tfunction handleClickLocal() {\n\t\tif (settingAssure) {\n\t\t\tlocalClicked = !localClicked;\n\t\t} else {\n\t\t\talert(\"Pleaes check the optimization setting\")\n\t\t}\n\t}\n\n\tfunction handleSettingAssure() {\n\t\tsettingAssure = true;\n\t\talert(\"Now you can go with local optimization!\")\n\t}\n\n\tfunction handleSettingStopAssure() {\n\t\tsettingAssure = false;\n\t\tlocalClicked = !localClicked;\n\t}\n\n\tfunction containsObject(items, feed) {\n\t\tlet keys = Object.keys(feed)\n\t\tfor (let i=0; i<items.length; i++) {\n\t\t\t\tlet count = 0;\n\t\t\t\tkeys.forEach(key => {\n\t\t\t\t\tif (items[i][key] == feed[key]) {\n\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (count == keys.length) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\n\tfunction saveGlobalSnapshot() {\n\t\tlet feed = {\"type\": \"global\", \"globalAlpha\": globalAlpha, \"hubNum\": hubNum, \"topN\": topN, \"group\": group};\n\t\tlet flag = containsObject(items, feed)\n\n\t\tif (!flag) {\n\t\t\titems.push(feed);\n\t\t\ti = items.length;\n\t\t} else {\n\t\t\tconsole.log(\"already in it\");\n\t\t}\n\t}\n\n\tfunction saveLocalSnapshot() {\n\t\tlet feed =  {\"type\": \"local\", \"globalAlpha\": globalAlpha, \"hubNum\": hubNum, \"topN\": topN, \"group\": group,\n\t\t\"localAlpha\": localAlpha, \"negRate\": negRate, \"numIter\": numIter, \"repulsionHub\": repulsionHub};\n\t\tlet flag = containsObject(items, feed)\n\n\t\tif (!flag) {\n\t\t\titems.push(feed);\n\t\t\ti = items.length;\n\t\t} else {\n\t\t\tconsole.log(\"already in it\");\n\t\t}\n\t}\n</script>\n\n<style>\n\th1, h3 {\n\t\ttext-align: center;\n\t}\n\n\t.row {\n\t\tdisplay: table;\n\t\twidth: 100%;\n\t\ttable-layout: fixed;\n\t\tborder-spacing: 2px;\n\t}\n\t.column {\n\t\tdisplay: table-cell;\n\t\twidows: 100%;\n\t\tpadding: 10px;\n\t\tdisplay: table-cell;\n\t\ttext-align: center;\n\t\tvertical-align: middle;\n\t}\n\n\t.column-snapshot {\n\t\ttext-align: left;\n\t\tvertical-align: middle;\n\t}\n\t.column-width1 {\n\t\tborder: 1px dashed gray;\n\t\twidth: 50%;\n\t}\n\n\t.column-width2 {\n\t\tborder: 1px dashed gray;\n\t\twidth: 20%;\n\t}\n\n\t.column-width3 {\n\t\tborder: 1px dashed gray;\n\t\twidth: 30%;\n\t}\n\n\t.column-d3 {\n\t\tborder: 1px solid gray;\n\t}\n\n\tinput {\n\t\tdisplay:inline-block;\n\t\tmargin: 0;\n\t}\n\n\t.sub-title {\n\t\tdisplay: table;\n\t\twidth: 100%;\n\t\tborder-spacing: 2px;\n\t}\n\n\t.button1 {\n\t\tbackground-color: lightgreen;\n\t}\n\n\t.button2 {\n\t\tbackground-color: lightpink;\n\t\tborder: 1px solid black;\n\t\twidth: 100%;\n\t}\n\n\t.sub-title-h3 {\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tbackground-color: black;\n\t\tcolor: #eee;\n\t\tpadding: 15px;\n\t}\n\n\t.sub-footer {\n\t\tdisplay: flex;\n\t}\n\n\t.sub-footer button {\n\t\tborder: 1px solid black;\n\t\twidth: 100%;\n\t\tpadding: 10px;\n\t\tmargin: 1px;\n\t}\n\n\t.snapshot {\n\t\tpadding: 0.5em 0;\n\t\tborder-top: 1px solid #eee;\n\t}\n\n\tfooter {\n\t\tpadding: 40px;\n\t\ttext-align: center;\n\t}\n\n\t.copyright {\n\t\tcolor: #aaa;\n\t\tfont-size: 12pt;\n\t\tpadding: 20px;\n\t\tborder-top: 1px solid #ddd;\n\t\tline-height: 30px;\n\t\tmargin: 40px 10px;\n\t}\n\tbutton {\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\twidth: 100%;\n\t\ttransition: all .15s linear;\n\t\tcursor: pointer;\n\t}\n\t\n\tbutton:hover {\n\t\tbackground-color: wheat;\n\t}\n\n\tbutton:active {\n\t\topacity: 0.1;\n\t}\n\n\tbutton:active:after {\n\t\topacity: 1;\n\t}\n</style>\n\n<div>\n\t<h1>\n\t\tSteerable UMATO\n\t</h1>\n\n\t<div>\n\t\t<!-- Global -->\n\t\t<div class=\"column\">\n\t\t\t<div class=\"sub-title\">\n\t\t\t\t{#if globalClicked}\n\t\t\t\t\t<button on:click={handleClickGlobal} class=\"button2\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\tHyperparameter setting for GLOBAL optimization (Click for STOP 游린)\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</button>\n\t\t\t\t{:else}\n\t\t\t\t\t<button on:click={handleClickGlobal} class=\"button1\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\tHyperparameter setting for GLOBAL optimization (Click for RUN 游릭)\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</button>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Global alpha</b>\n\t\t\t\t\t<br>\n\t\t\t\t\trange: 0.0 ~ 1.0 w/ interval=0.005\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{globalAlpha}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<input type=range bind:value={globalAlpha} min=0.0 max=1.0 step=0.005>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Number of hub nodes</b>\n\t\t\t\t\t<br>\n\t\t\t\t\trange: 100 ~ 500 w/ interval=50\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{hubNum}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<input type=range bind:value={hubNum} min=100 max=500 step=50>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Top N considerations</b>\n\t\t\t\t\t<br>\n\t\t\t\t\trange: 5 ~ 30 w/ interval=5\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{topN}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<input type=range bind:value={topN} min=5 max=30 step=5>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Init method</b>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{group}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"radio\" bind:group value={\"PCA\"}>\n\t\t\t\t\t\t<slot/>\n\t\t\t\t\t\tPCA\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"radio\" bind:group value={\"Random\"}>\n\t\t\t\t\t\t<slot/>\n\t\t\t\t\t\tRandom\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\n\t\t\t<div class=\"sub-footer\">\n\t\t\t\t<button on:click={saveGlobalSnapshot}>\n\t\t\t\t\tSave snapshot\n\t\t\t\t</button>\n\t\t\t\t<button on:click={handleSettingAssure}>\n\t\t\t\t\tUse this setting for LOCAL optimization\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- LOCAL -->\n\t\t<div class=\"column\">\n\t\t\t<div class=\"sub-title\">\n\t\t\t\t{#if localClicked}\n\t\t\t\t\t<button on:click={handleSettingStopAssure} class=\"button2\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\tHyperparameter setting for LOCAL optimization (Click for STOP 游린)\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</button>\n\t\t\t\t\t<!-- {#if finishedLocalOptimization}\n\t\t\t\t\tfunction ~\n\t\t\t\t\tlocalClicked = false\n\t\t\t\t\t{/if} -->\n\t\t\t\t{:else}\n\t\t\t\t\t<button on:click={handleClickLocal} class=\"button1\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\tHyperparameter setting for LOCAL optimization (Click for RUN 游릭)\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</button>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Local alpha</b>\n\t\t\t\t\t<br>\n\t\t\t\t\trange: 0.0 ~ 1.0 w/ interval=0.005\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{localAlpha}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<input type=range bind:value={localAlpha} min=0.0 max=1.0 step=0.005>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Negative sampling rate</b>\n\t\t\t\t\t<br>\n\t\t\t\t\trange: 1 ~ 50 w/ interval=1\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{negRate}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<input type=range bind:value={negRate} min=1 max=50 step=1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Number of iterations</b>\n\t\t\t\t\t<br>\n\t\t\t\t\trange: 50 ~ 200 w/ interval=10\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{numIter}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<input type=range bind:value={numIter} min=50 max=200 step=10>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-width1\">\n\t\t\t\t\t<b>Repulsion force for hub nodes</b>\n\t\t\t\t\t<br>\n\t\t\t\t\trange: 0 ~ 1.0 w/ interval=0.01\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width2\">\n\t\t\t\t\t{repulsionHub}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column column-width3\">\n\t\t\t\t\t<input type=range bind:value={repulsionHub} min=0 max=1 step=0.01>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\n\t\t\t<div class=\"sub-footer\">\n\t\t\t\t<button on:click={saveLocalSnapshot}>\n\t\t\t\t\tSave snapshot\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- Result charts -->\n\t<div>\n\t\t<div class=\"column\">\n\t\t\t<div class=\"sub-title\">\n\t\t\t\t<h3 class=\"sub-title-h3\">\n\t\t\t\t\tGlobal optimization 2D plot\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-d3\">\n\t\t\t\t\t<Scatterplot globalClicked={globalClicked}></Scatterplot>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"column\">\n\t\t\t<div class=\"sub-title\">\n\t\t\t\t<h3 class=\"sub-title-h3\">\n\t\t\t\t\tLocal optimization 2D plot\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-d3\">\n\t\t\t\t\t<Scatterplot2></Scatterplot2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- Quantitative evaluation -->\n\t<div>\n\t\t<div class=\"column\">\n\t\t\t<div class=\"sub-title\">\n\t\t\t\t<h3 class=\"sub-title-h3\">\n\t\t\t\t\tGlobal optimization quantitative result\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-d3\">\n\t\t\t\t\t<Linechart globalClicked={globalClicked}></Linechart>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"column\">\n\t\t\t<div class=\"sub-title\">\n\t\t\t\t<h3 class=\"sub-title-h3\">\n\t\t\t\t\tLocal optimization quantitative result\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"column column-d3\">\n\t\t\t\t\t<Linechart2 localClicked={localClicked}></Linechart2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- Snapshot -->\n\t<div class=\"row\">\n\t\t<div class=\"column column-snapshot\">\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" bind:checked={showItems}>\n\t\t\t\tshow snapshots\n\t\t\t</label>\n\t\t\t{#if showItems}\n\t\t\t\t{#each items.slice(0, i) as item}\n\t\t\t\t\t{#if item.type == \"global\"}\n\t\t\t\t\t\t<div class=\"snapshot\" transition:slide>\n\t\t\t\t\t\t\t{items.indexOf(item)}. type: {item.type}, globalAlpha: {item.globalAlpha}, hubNum: {item.hubNum},\n\t\t\t\t\t\t\ttopN: {item.topN}, group: {item.group}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=snapshot transition:slide>\n\t\t\t\t\t\t\t{items.indexOf(item)}. type: {item.type}, globalAlpha: {item.globalAlpha}, hubNum: {item.hubNum},\n\t\t\t\t\t\t\ttopN: {item.topN}, group: {item.group}, localAlpha: {item.localAlpha}, negRate: {item.negRate},\n\t\t\t\t\t\t\tnumIter: {item.numIter}, repulsionHub: {item.repulsionHub}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n\n\t<div id=\"my_dataviz\"></div>\n\t\n\t<footer class=\"copyright\">\n\t\tCopyright 2020 Hyung-Kwon Ko\n\t\t<br>\n\t\t<a href=\"mailto:hkko@hcil.snu.ac.kr\">hkko@hcil.snu.ac.kr</a> / <a href=\"https://hyungkwonko.info\">hyungkwonko.info</a>\n\t</footer>\n\n</div>\n\n\n<!-- <p>size: {w}px x {h}px</p>\n<input bind:value={text}>\n\n\n<div bind:clientWidth={w} bind:clientHeight={h}>\n\t<span style=\"font-size: {topN}px\">{text}</span>\n</div> -->",
    "<!-- https://svelte.dev/repl/area-chart?version=3.24.1 -->\n<!-- https://github.com/sveltejs/svelte/issues/3050 -->\n<!-- https://svelte.dev/repl/ac35bd02ee76441592b1ded00ac3c515?version=3.5.2 -->\n<!-- https://svelte.dev/repl/b4c485ee69484fd8a63b8dc07c3b20a2?version=3.4.1 -->\n<!-- https://svelte.dev/repl/da70a84eb31c4ddda94122ae17768c19?version=3.17.2 -->\n\n<script>\n\timport * as d3 from 'd3';\n    import data from './globalresult.json'\n    import { onMount, beforeUpdate, afterUpdate } from 'svelte'\n\n    export let globalClicked = false;\n\n    let counter = 0;\n    let flag = true;\n    let tmpData;\n\n    function translate(x, y) {\n        return 'translate(' + x + ',' + y + ')'\n    }\n\n\tonMount(() => {\n    });\n\n    beforeUpdate(() => {\n    });\n    \n\tafterUpdate(() => {\n        if(globalClicked && flag) {\n            flag = false\n            const interval = setInterval(() => {\n                if (counter < 10) counter++;\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n\n        tmpData = data.slice(0, counter + 1)\n\n        // remove chart when stopped\n        if(!globalClicked) {\n            counter = 0\n            tmpData = data.slice(0, counter + 1)\n        }\n\t});\n\n    let measures = [\"dtm01\", \"dtm1\", \"ce\"]\n\n    let r = 5;\n    let textMargin = 7;\n    let legendMargin;\n\n    let el;\n\n    let hs = false;\n    let targetIndex = -1;\n\t\n    const svgWidth = 550\n    const svgHeight = 550\n    const margin = { top: 20, right: 15, bottom: 30, left: 25 };\n    let width = svgWidth - margin.left - margin.right\n    let height = svgHeight - margin.top - margin.bottom\n    \n\tdata.forEach((d) => {\n        d.iter = +d.iter;\n        d.dtm01 = +d.dtm01;\n\t\td.ce = +d.ce;\n    });\n\n    const yTicks = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0];\n    const xTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    \n\t$: xScale = d3.scaleLinear()\n\t\t.domain([minX, maxX])\n\t\t.range([margin.left, width - margin.right]);\n\n\t$: yScale = d3.scaleLinear()\n\t\t.domain([Math.min.apply(null, yTicks), Math.max.apply(null, yTicks)])\n        .range([height - margin.bottom, margin.top]);\n\n\t$: minX = d3.min(data, d => d.iter);\n    $: maxX = d3.max(data, d => d.iter);\n    \n    let path;\n    let path2;\n    let path3;\n\n    $: if (counter > 0) {\n        path = `M${tmpData.map(d => `${xScale(d.iter)}, ${yScale(d.dtm01)}`).join('L')}`;\n        path2 = `M${tmpData.map(d => `${xScale(d.iter)}, ${yScale(d.dtm1)}`).join('L')}`;\n        path3 = `M${tmpData.map(d => `${xScale(d.iter)}, ${yScale(d.ce)}`).join('L')}`;\n    }\n    // $: dot = data.map(d => `${xScale(d.iter)}, ${yScale(d.dtm01)}`);\n    // $: area = `${path}L${xScale(maxX)},${yScale(0)}L${xScale(minX)},${yScale(0)}Z`;\n\n\tfunction formatMobile(tick) {\n\t\treturn \"'\" + tick % 100;\n    }\n    \n    function hoverState(e, d, i) {\n        hs = true;\n        targetIndex = i;\n    }\n    \n    function hoverStateOut(e, d, i) {\n        hs = false;\n        targetIndex = -1;\n    }\n\n</script>\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<!-- y axis -->\n\t\t<g class=\"axis y-axis\" transform=\"translate(0, {margin.top})\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - margin.bottom})\">\n\t\t\t\t\t<line x2=\"100%\"></line>\n\t\t\t\t\t<text y=\"-4\">{tick}</text>\n\t\t\t\t\t<!-- <text y=\"-4\">{tick} {tick === 1 ? '.0 y axis' : ''}</text> -->\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- x axis -->\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each xTicks as tick}\n\t\t\t\t<g class=\"tick tick-{ tick }\" transform=\"translate({xScale(tick)},{height})\">\n\t\t\t\t\t<line y1=\"-{height}\" y2=\"-{margin.bottom}\" x1=\"0\" x2=\"0\"></line>\n\t\t\t\t\t<text y=\"-{margin.bottom-5}\">{width > 380 ? tick : formatMobile(tick)}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n        <!-- x axis label -->\n        <text x='{(width - margin.left) / 2}' y='{height}' font-size=\"12px\">Iteration #</text>\n\n\n        {#if counter > 0}\n    \t\t<!-- line chart -->\n            <path class=\"path-line path-line-dtm01\" d={path}></path>\n            <path class=\"path-line path-line-dtm1\" d={path2}></path>\n            <path class=\"path-line path-line-ce\" d={path3}></path>\n\t    \t<!-- <path class=\"path-area\" d={area}></path> -->\n\n            <!-- circles -->\n            {#each tmpData as d, i}\n                {#if !hs || i != targetIndex}\n                    <circle class=\"circle-line circle-dtm01\"\n                        r={r}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.dtm01)}'\n                        on:mouseover={(e) => hoverState(e, d, i)}\n                    ></circle>\n                    <circle class=\"circle-line circle-dtm1\"\n                        r={r}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.dtm1)}'\n                        on:mouseover={(e) => hoverState(e, d, i)}\n                    ></circle>\n                    <circle class=\"circle-line circle-ce\"\n                        r={r}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.ce)}'\n                        on:mouseover={(e) => hoverState(e, d, i)}\n                    ></circle>\n                {:else}\n                    <circle class=\"circle-line circle-dtm01\"\n                        r={10}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.dtm01)}'\n                        on:mouseout={(e) => hoverStateOut(e, d, i)}\n                    ></circle>\n                    <text x='{xScale(d.iter) + textMargin}' y='{yScale(d.dtm01) - textMargin}'>{d.dtm01}</text>\n                    <circle class=\"circle-line circle-dtm1\"\n                        r={10}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.dtm1)}'\n                        on:mouseout={(e) => hoverStateOut(e, d, i)}\n                    ></circle>\n                    <text x='{xScale(d.iter) + textMargin}' y='{yScale(d.dtm1) - textMargin}'>{d.dtm1}</text>\n                    <circle class=\"circle-line circle-ce\"\n                        r={10}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.ce)}'\n                        on:mouseout={(e) => hoverStateOut(e, d, i)}\n                    ></circle>\n                    <text x='{xScale(d.iter) + textMargin}' y='{yScale(d.ce) - textMargin}'>{d.ce}</text>\n                {/if}\n            {/each}\n\n            <!-- legend -->\n            {#each measures as measure, i}\n                <circle class=\"circle-line circle-{measure}\"\n                    r={r}\n                    cx='{width - 90}'\n                    cy='{17 * (i + 1)}'\n                ></circle>\n                <text x='{width - 70}' y='{19 * (i+1)}' font-size=\"12px\">{measure}</text>\n            {/each}\n        {/if}\n\n\t</svg>\n</div>\n\n<style>\n    .circle-line {\n        fill-opacity: 0.7;\n        stroke: #eee;\n        stroke-width: 1.5;\n    }\n\n    .circle-dtm01 {\n        fill: green;\n    }\n    .circle-dtm1 {\n        fill: blue;\n    }\n    .circle-ce {\n        fill: red;\n    }\n\n    .chart, h2, p {\n\t\twidth: 100%;\n\t\t/* max-width: 500px; */\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 400px;\n\t\toverflow: visible;\n\t}\n\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n\t.path-line {\n\t\tfill: none;\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t\tstroke-width: 2;\n\t}\n\n    .path-line-dtm01 {\n\t\tstroke: green;\n    }\n    .path-line-dtm1 {\n\t\tstroke: blue;\n    }\n    .path-line-ce {\n\t\tstroke: red;\n    }\n\n\n    .path-area {\n\t\tfill: rgba(0, 128, 0, 0.2);\n\t}\n</style>",
    "<script>\n\timport * as d3 from 'd3';\n    import data from './localresult.json'\n    import { onMount, beforeUpdate, afterUpdate } from 'svelte'\n\n    export let localClicked = false;\n\n    let counter = 0;\n    let flag = true;\n    let tmpData;\n\n\tonMount(() => {\n    });\n\n    beforeUpdate(() => {\n    });\n    \n\tafterUpdate(() => {\n        if(localClicked && flag) {\n            flag = false\n            const interval = setInterval(() => {\n                if (counter < 20) counter++;\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n\n        tmpData = data.slice(0, counter + 1)\n\n        // remove chart when stopped\n        if(!localClicked) {\n            counter = 0\n            tmpData = data.slice(0, counter + 1)\n        }\n\t});\n\n    function translate(x, y) {\n        return 'translate(' + x + ',' + y + ')'\n    }\n\n    let measures = [\"mrre\", \"continuity\", \"trust\"]\n\n\n    let r = 5;\n    let textMargin = 7;\n    let legendMargin;\n\n    let el;\n\n    let hs = false;\n    let targetIndex = -1;\n\t\n    const svgWidth = 550\n    const svgHeight = 550\n    const margin = { top: 20, right: 15, bottom: 30, left: 25 };\n    let width = svgWidth - margin.left - margin.right\n    let height = svgHeight - margin.top - margin.bottom\n    \n\tdata.forEach((d) => {\n        d.iter = +d.iter;\n        d.mrre = +d.mrre;\n\t\td.trust = +d.trust;\n    });\n\n    const yTicks = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0];\n    const xTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n    \n\t$: xScale = d3.scaleLinear()\n\t\t.domain([minX, maxX])\n\t\t.range([margin.left, width - margin.right]);\n\n\t$: yScale = d3.scaleLinear()\n\t\t.domain([Math.min.apply(null, yTicks), Math.max.apply(null, yTicks)])\n        .range([height - margin.bottom, margin.top]);\n\n\t$: minX = d3.min(data, d => d.iter);\n\t$: maxX = d3.max(data, d => d.iter);\n\n    let path;\n    let path2;\n    let path3;\n\n    $: if (counter > 0) {\n        path = `M${tmpData.map(d => `${xScale(d.iter)}, ${yScale(d.mrre)}`).join('L')}`;\n        path2 = `M${tmpData.map(d => `${xScale(d.iter)}, ${yScale(d.continuity)}`).join('L')}`;\n        path3 = `M${tmpData.map(d => `${xScale(d.iter)}, ${yScale(d.trust)}`).join('L')}`;\n    }\n\n    // $: dot = data.map(d => `${xScale(d.iter)}, ${yScale(d.mrre)}`);\n    // $: area = `${path}L${xScale(maxX)},${yScale(0)}L${xScale(minX)},${yScale(0)}Z`;\n\n\tfunction formatMobile(tick) {\n\t\treturn \"'\" + tick % 100;\n    }\n    \n    function hoverState(e, d, i) {\n        hs = true;\n        targetIndex = i;\n    }\n    \n    function hoverStateOut(e, d, i) {\n        hs = false;\n        targetIndex = -1;\n    }\n\n</script>\n\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<!-- y axis -->\n\t\t<g class=\"axis y-axis\" transform=\"translate(0, {margin.top})\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - margin.bottom})\">\n\t\t\t\t\t<line x2=\"100%\"></line>\n\t\t\t\t\t<text y=\"-4\">{tick}</text>\n\t\t\t\t\t<!-- <text y=\"-4\">{tick} {tick === 1 ? '.0 y axis' : ''}</text> -->\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- x axis -->\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each xTicks as tick}\n\t\t\t\t<g class=\"tick tick-{ tick }\" transform=\"translate({xScale(tick)},{height})\">\n\t\t\t\t\t<line y1=\"-{height}\" y2=\"-{margin.bottom}\" x1=\"0\" x2=\"0\"></line>\n\t\t\t\t\t<text y=\"-{margin.bottom-5}\">{width > 380 ? tick : formatMobile(tick)}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n        <!-- axis label -->\n        <text x='{(width - margin.left) / 2}' y='{height}' font-size=\"12px\">Iteration #</text>\n\n        {#if counter > 0}\n            <!-- line chart -->\n            <path class=\"path-line path-line-mrre\" d={path}></path>\n            <path class=\"path-line path-line-continuity\" d={path2}></path>\n            <path class=\"path-line path-line-trust\" d={path3}></path>\n            <!-- <path class=\"path-area\" d={area}></path> -->\n\n            <!-- circles -->\n            {#each tmpData as d, i}\n                {#if !hs || i != targetIndex}\n                    <circle class=\"circle-line circle-mrre\"\n                        r={r}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.mrre)}'\n                        on:mouseover={(e) => hoverState(e, d, i)}\n                    ></circle>\n                    <circle class=\"circle-line circle-continuity\"\n                        r={r}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.continuity)}'\n                        on:mouseover={(e) => hoverState(e, d, i)}\n                    ></circle>\n                    <circle class=\"circle-line circle-trust\"\n                        r={r}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.trust)}'\n                        on:mouseover={(e) => hoverState(e, d, i)}\n                    ></circle>\n                {:else}\n                    <circle class=\"circle-line circle-mrre\"\n                        r={10}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.mrre)}'\n                        on:mouseout={(e) => hoverStateOut(e, d, i)}\n                    ></circle>\n                    <text x='{xScale(d.iter) + textMargin}' y='{yScale(d.mrre) - textMargin}'>{d.mrre}</text>\n                    <circle class=\"circle-line circle-continuity\"\n                        r={10}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.continuity)}'\n                        on:mouseout={(e) => hoverStateOut(e, d, i)}\n                    ></circle>\n                    <text x='{xScale(d.iter) + textMargin}' y='{yScale(d.continuity) - textMargin}'>{d.continuity}</text>\n                    <circle class=\"circle-line circle-trust\"\n                        r={10}\n                        cx='{xScale(d.iter)}'\n                        cy='{yScale(d.trust)}'\n                        on:mouseout={(e) => hoverStateOut(e, d, i)}\n                    ></circle>\n                    <text x='{xScale(d.iter) + textMargin}' y='{yScale(d.trust) - textMargin}'>{d.trust}</text>\n                {/if}\n            {/each}\n\n            <!-- legend -->\n            {#each measures as measure, i}\n                <circle class=\"circle-line circle-{measure}\"\n                    r={r}\n                    cx='{width - 100}'\n                    cy='{280 + 17 * (i + 1)}'\n                ></circle>\n                <text x='{width - 80}' y='{280 + 19 * (i+1)}' font-size=\"12px\">{measure}</text>\n            {/each}\n        {/if}\n\t</svg>\n</div>\n\n<style>\n    .circle-line {\n        fill-opacity: 0.7;\n        stroke: #eee;\n        stroke-width: 1.5;\n    }\n\n    .circle-mrre {\n        fill: green;\n    }\n    .circle-continuity {\n        fill: blue;\n    }\n    .circle-trust {\n        fill: red;\n    }\n\n    .chart, h2, p {\n\t\twidth: 100%;\n\t\t/* max-width: 500px; */\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 400px;\n\t\toverflow: visible;\n\t}\n\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n\t.path-line {\n\t\tfill: none;\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t\tstroke-width: 2;\n\t}\n\n    .path-line-mrre {\n\t\tstroke: green;\n    }\n    .path-line-continuity {\n\t\tstroke: blue;\n    }\n    .path-line-trust {\n\t\tstroke: red;\n    }\n\n\n    .path-area {\n\t\tfill: rgba(0, 128, 0, 0.2);\n\t}\n</style>",
    "<!-- https://svelte.dev/examples#scatterplot -->\n<!-- https://svelte.recipes/components/scatterplot/ -->\n<!-- https://svelte.dev/repl/b4c485ee69484fd8a63b8dc07c3b20a2?version=3.4.1 -->\n\n<script>\n    import * as d3 from 'd3';\n\timport * as easings from 'svelte/easing';\n\timport { tweened } from 'svelte/motion';\n    import { onMount, beforeUpdate, afterUpdate } from 'svelte'\n    import data from './umato_small.json'\n\n    export let globalClicked = false;\n    let counter = 0;\n    let flag = true;\n    let tmpData;\n\tlet maxlen = 10\n\n    function translate(x, y) {\n        return 'translate(' + x + ',' + y + ')'\n    }\n\n\tonMount(() => {\n    });\n\n    beforeUpdate(() => {\n    });\n\n\tafterUpdate(() => {\n        if(globalClicked && flag) {\n            flag = false\n            const interval = setInterval(() => {\n                if (counter < 10) counter++;\n            }, 1000);\n            return () => clearInterval(interval);\n\t\t}\n\t\t\n\t\tif (counter < maxlen) {\n\t\t\tmember = counter.toString();\n\t\t\tpoints = data[member]\n\t\t}\n\n        // remove chart when stopped\n        if(!globalClicked) {\n\t\t\tcounter = 0\n\t\t\tmember = 0\n            points = data[member]\n        }\n\t});\n\n\n\tlet member = '0';\n\tlet points = data[member];\n\n    let r = 5;\n    let hs = false;\n    let targetIndex = -1;\n\t\n\tconst tweenedPoints = tweened(points, {\n\t\tdelay: 0,\n\t\tduration: 750,\n\t\teasing: easings.cubicOut\n    });\n    \n\tconst [minX, maxX] = d3.extent($tweenedPoints,(d) => d.x1);\n\tconst [minY, maxY] = d3.extent($tweenedPoints,(d) => d.x2);\n\n    const svgWidth = 600\n    const svgHeight = 600\n    const margin = { top: 30, right: 15, bottom: 30, left: 25 };\n\n    let width = svgWidth - margin.left - margin.right\n    let height = svgHeight - margin.top - margin.bottom\n    \n\t$: xScale = d3.scaleLinear()\n\t\t.domain([minX, maxX])\n\t\t.range([margin.left, width - margin.right]);\n\n\t$: yScale = d3.scaleLinear()\n\t\t.domain([minY, maxY])\n\t\t.range([height - margin.bottom, margin.top]);\n\n    const xTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const yTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const colorDomain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const colorScale =  d3.scaleOrdinal()\n        .domain(d3.extent(colorDomain))\n        .range([\"#4e79a7\",\"#f28e2c\",\"#e15759\",\"#76b7b2\",\"#59a14f\",\"#edc949\",\"#af7aa1\",\"#ff9da7\",\"#9c755f\",\"#bab0ab\"]);\n\n\tfunction setTween(key) {\n\t\ttweenedPoints.set(data[key]);\n\t}\n\n\t$: if (member > 0) {\n\t\tsetTween(member)\n\t}\n\n</script>\n\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<g class=\"axis y-axis\" transform=\"translate(0, {margin.top})\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - margin.bottom / 2})\">\n\t\t\t\t\t<line x2=\"100%\"></line>\n\t\t\t\t\t<text y=\"-4\">{tick}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each xTicks as tick}\n\t\t\t\t<g class=\"tick tick-{ tick }\" transform=\"translate({xScale(tick)},{height + margin.top / 2})\">\n\t\t\t\t\t<line y1=\"-{height}\" y2=\"-{margin.bottom}\" x1=\"0\" x2=\"0\"></line>\n\t\t\t\t\t<text y=\"-{margin.bottom-10}\">{tick}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t{#if counter > 0}\n\t\t\t{#each points as d, i}\n\t\t\t\t<circle class=\"circle-line\"\n\t\t\t\t\tr={r}\n\t\t\t\t\tcx='{xScale(d.x1)}'\n\t\t\t\t\tcy='{yScale(d.x2)}'\n\t\t\t\t\tfill='{colorScale(d.label)}'\n\t\t\t\t></circle>\n\t\t\t{/each}\n\t\t{/if}\n    </svg>\n</div>\n\n<style>\n    .chart, h2, p {\n\t\twidth: 100%;\n\t\tmax-width: 600px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 600px;\n\t\toverflow: visible;\n\t}\n\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n    .circle-line {\n        fill-opacity: 1.0;\n        stroke: black;\n        stroke-width: 0.4;\n    }\n</style>",
    "<!-- https://svelte.dev/examples#scatterplot -->\n<script>\n\timport * as d3 from 'd3';\n\n    function translate(x, y) { return 'translate(' + x + ',' + y + ')'; }\n\n    function read_csv(path) {\n        let request = new XMLHttpRequest();  \n        request.open(\"GET\", path, false);   \n        request.send(null);\n\n        let csvData = new Array();\n        let jsonObject = request.responseText.split(/\\r?\\n|\\r/);\n        for (let i = 0; i < jsonObject.length; i++) {\n            csvData.push(jsonObject[i].split(','));\n        }\n        return csvData\n    }\n\n    let data = read_csv(\"umato-large.csv\")\n\n    let r = 2.5;\n    let textMargin = 7;\n\n    let hs = false;\n    let targetIndex = -1;\n\t\n    const svgWidth = 600\n    const svgHeight = 600\n    const margin = { top: 30, right: 15, bottom: 30, left: 25 };\n\n    let width = svgWidth - margin.left - margin.right\n    let height = svgHeight - margin.top - margin.bottom\n    \n\tdata.forEach((d) => {\n        d[0] = +d[0];\n        d[1] = +d[1];\n\t\td[2] = +d[2];\n    });\n\n    const xTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const yTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const colorDomain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    $: xScale = d3.scaleLinear()\n        .domain([Math.min.apply(null, xTicks), Math.max.apply(null, xTicks)])\n        .range([margin.left, width - margin.right]);\n\n\t$: yScale = d3.scaleLinear()\n\t\t.domain([Math.min.apply(null, yTicks), Math.max.apply(null, yTicks)])\n        .range([height - margin.bottom, margin.top]);\n\n    // const colorScale = d3.scaleLinear()\n    //     .domain(d3.extent(colorDomain))\n    //     .range([\"black\", \"red\"]);\n\n    const colorScale =  d3.scaleOrdinal()\n        .domain(d3.extent(colorDomain))\n        .range([\"#4e79a7\",\"#f28e2c\",\"#e15759\",\"#76b7b2\",\"#59a14f\",\"#edc949\",\"#af7aa1\",\"#ff9da7\",\"#9c755f\",\"#bab0ab\"]);\n\n</script>\n\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<!-- y axis -->\n\t\t<g class=\"axis y-axis\" transform=\"translate(0, {margin.top})\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - margin.bottom / 2})\">\n\t\t\t\t\t<line x2=\"100%\"></line>\n\t\t\t\t\t<text y=\"-4\">{tick}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- x axis -->\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each xTicks as tick}\n\t\t\t\t<g class=\"tick tick-{ tick }\" transform=\"translate({xScale(tick)},{height + margin.top / 2})\">\n\t\t\t\t\t<line y1=\"-{height}\" y2=\"-{margin.bottom}\" x1=\"0\" x2=\"0\"></line>\n\t\t\t\t\t<text y=\"-{margin.bottom-10}\">{tick}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n        {#each data as d, i}\n            <circle class=\"circle-line\"\n                r={r}\n                cx='{xScale(d[0])}'\n                cy='{yScale(d[1])}'\n                fill='{colorScale(d[2])}'\n            ></circle>\n        {/each}\n    </svg>\n</div>\n\n<style>\n    .chart, h2, p {\n\t\twidth: 100%;\n\t\tmax-width: 600px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 600px;\n\t\toverflow: visible;\n\t}\n\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n    .circle-line {\n        fill-opacity: 0.7;\n        stroke: black;\n        stroke-width: 0.2;\n    }\n</style>",
    "<!-- https://svelte.dev/examples#scatterplot -->\n<!-- https://svelte.recipes/components/scatterplot/ -->\n<!-- https://svelte.dev/repl/b4c485ee69484fd8a63b8dc07c3b20a2?version=3.4.1 -->\n\n<script>\n    import * as d3 from 'd3';\n\timport * as easings from 'svelte/easing';\n\timport { tweened } from 'svelte/motion';\n    import { onMount, beforeUpdate, afterUpdate } from 'svelte'\n    import data from './umato_small.json'\n\n    export let globalClicked = false;\n    export let counter = 0;\n\n    function translate(x, y) { return 'translate(' + x + ',' + y + ')'; }\n\n\tlet member = '0';\n\tlet points = data[member];\n\n    let flag = true;\n\n    let r = 5;\n    let hs = false;\n    let targetIndex = -1;\n\t\n\tconst tweenedPoints = tweened(points, {\n\t\tdelay: 0,\n\t\tduration: 750,\n\t\teasing: easings.cubicOut\n    });\n    \n\tconst [minX, maxX] = d3.extent($tweenedPoints,(d) => d.x1);\n\tconst [minY, maxY] = d3.extent($tweenedPoints,(d) => d.x2);\n\n    const svgWidth = 600\n    const svgHeight = 600\n    const margin = { top: 30, right: 15, bottom: 30, left: 25 };\n\n    let width = svgWidth - margin.left - margin.right\n    let height = svgHeight - margin.top - margin.bottom\n    \n\t$: xScale = d3.scaleLinear()\n\t\t.domain([minX, maxX])\n\t\t.range([margin.left, width - margin.right]);\n\n\t$: yScale = d3.scaleLinear()\n\t\t.domain([minY, maxY])\n\t\t.range([height - margin.bottom, margin.top]);\n\n    const xTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const yTicks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const colorDomain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const colorScale =  d3.scaleOrdinal()\n        .domain(d3.extent(colorDomain))\n        .range([\"#4e79a7\",\"#f28e2c\",\"#e15759\",\"#76b7b2\",\"#59a14f\",\"#edc949\",\"#af7aa1\",\"#ff9da7\",\"#9c755f\",\"#bab0ab\"]);\n\n\tfunction setTween(key) {\n\t\ttweenedPoints.set(data[key]);\n\t}\n\n\t$: setTween(member)\n\n\t// member = \"1\";\n\t// points = data[member]\n\n\tonMount(() => {\n    });\n\n    beforeUpdate(() => {\n    });\n    \n\tafterUpdate(() => {\n\t\tmember = counter.toString();\n\t\tpoints = data[member]\n\n        // remove chart when stopped\n        if(!globalClicked) {\n            counter = 0\n            points = data[member]\n        }\n\t});\n\n\n</script>\n\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<g class=\"axis y-axis\" transform=\"translate(0, {margin.top})\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - margin.bottom / 2})\">\n\t\t\t\t\t<line x2=\"100%\"></line>\n\t\t\t\t\t<text y=\"-4\">{tick}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each xTicks as tick}\n\t\t\t\t<g class=\"tick tick-{ tick }\" transform=\"translate({xScale(tick)},{height + margin.top / 2})\">\n\t\t\t\t\t<line y1=\"-{height}\" y2=\"-{margin.bottom}\" x1=\"0\" x2=\"0\"></line>\n\t\t\t\t\t<text y=\"-{margin.bottom-10}\">{tick}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n        {#each points as d, i}\n            <circle class=\"circle-line\"\n                r={r}\n                cx='{xScale(d.x1)}'\n                cy='{yScale(d.x2)}'\n                fill='{colorScale(d.label)}'\n            ></circle>\n        {/each}\n    </svg>\n</div>\n\n<style>\n    .chart, h2, p {\n\t\twidth: 100%;\n\t\tmax-width: 600px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 600px;\n\t\toverflow: visible;\n\t}\n\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n    .circle-line {\n        fill-opacity: 1.0;\n        stroke: black;\n        stroke-width: 0.4;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}